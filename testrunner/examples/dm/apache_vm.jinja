# Copyright 2018 Google LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{% if "name" in properties %}
{% set NAME = properties["name"] %}
{% else %}
{% set NAME = env["deployment"] + "-apache" %}
{% endif %}

{% set VM_NAME = NAME + "-vm" %}
{% set CONFIG_NAME = NAME + "-config" %}

{% if "waiterName" in properties %}
{% set WAITER_NAME = properties["waiterName"] %}
{% else %}
{% set WAITER_NAME = NAME + "-waiter" %}
{% endif %}

resources:
- name: {{ VM_NAME }}
  type: compute.v1.instance
  properties:
    zone: {{ properties["zone"] }}
    machineType: https://www.googleapis.com/compute/v1/projects/{{ env["project"] }}/zones/{{ properties["zone"] }}/machineTypes/{{ properties["machineType"] }}
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash -eu

          # Install Apache2
          apt install -y apache2

          # Test cURLing
          curl -s -I http://localhost

          # Posts success to config waiter
          readonly access_token="$(curl -s -H "Metadata-Flavor: Google" http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token | awk -F\" '{ print $4 }')"
          readonly runtime_config_path="projects/{{ env["project"] }}/configs/{{ CONFIG_NAME }}"
          readonly value_base64="$(printf "OK" | base64)"
          readonly payload="$(printf '{"name": "%s", "value": "%s"}' "${runtime_config_path}/variables/status/success/OK" "${value_base64}")"
          curl -s \
            -X POST \
            -d "${payload}" \
            -H "Authorization: Bearer ${access_token}" \
            -H "Content-Type: application/json" \
            "https://runtimeconfig.googleapis.com/v1beta1/${runtime_config_path}/variables"

    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        diskName: {{ NAME }}-boot
        sourceImage: https://www.googleapis.com/compute/v1/projects/debian-cloud/global/images/family/debian-9
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/{{ env["project"] }}/global/networks/{{ properties["network"] }}
      # Access Config required to give the instance a public IP address
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    serviceAccounts:
    - email: default
      scopes:
      - 'https://www.googleapis.com/auth/devstorage.read_only'
      - 'https://www.googleapis.com/auth/logging.write'
      - 'https://www.googleapis.com/auth/cloudruntimeconfig'

- name: {{ CONFIG_NAME }}
  type: runtimeconfig.v1beta1.config
  properties:
    config: {{ CONFIG_NAME }}
    description: Holds startup status

- name: {{ WAITER_NAME }}
  type: runtimeconfig.v1beta1.waiter
  metadata:
    dependsOn:
    - {{ VM_NAME }}
  properties:
    parent: $(ref.{{ CONFIG_NAME }}.name)
    success:
      cardinality:
        number: 1
        path: status/success
    timeout: 120s
    waiter: software

outputs:
- name: externalIp
  value: $(ref.{{ VM_NAME }}.networkInterfaces[0].accessConfigs[0].natIP)
- name: internalIp
  value: $(ref.{{ VM_NAME }}.networkInterfaces[0].networkIP)
